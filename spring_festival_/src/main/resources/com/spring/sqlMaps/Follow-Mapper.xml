<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    
<mapper namespace="Follow-Mapper">

	<select id="followTotalCount" resultType="int">
        select count(*) from (
        select distinct m.nickName
		from follow f, member m
		where f.id=#{str} and f.follow=m.id)
	</select>
	
	
	
	<select id="followedTotalCount" resultType="int">
		select count(*) from (
		select distinct m.nickName
		from follow f, member m
		where f.follow=#{str} and f.id=m.id)
	</select>
	
	
	
	<!-- 특정 회원이 팔로우 한 목록 -->
	<select id="selectFollow" resultType="str" >
		select distinct m.nickName
		from follow f, member m
		where f.id=#{str} and f.follow=m.id
	</select>	
	
	
	
	
	<!-- 특정 회원을 팔로우 한 사람들 목록 -->
	<select id="selectFollowed" resultType="str">
		select distinct m.nickName
		from follow f, member m
		where f.follow=#{str} and f.id=m.id
	</select>	
	
	
<!-- ////////////////////////////////////////////////////////////////////////////////////////// -->
	
	<!-- 팔로워가 작성한 3개 게시판의 모든 글들을 출력한다 -->
	<select id="followBoard" resultType="followBoard">
		select distinct '축제' "boardType", bf.F_TITLE "title", m.nickName "nickName", to_date(to_char(bf.F_REGDATE, 'yy-mm-dd')) "writeDate", bf.fno "bno"
		from (select distinct follow
		      from follow fo
		      where fo.id=#{str}) fo, member m, brd_festival bf
		where fo.follow = m.id and bf.f_writer = fo.follow
		
		union
		
		select distinct '후기' "boardType", br.R_TITLE "title", m.nickName "nickName", to_date(to_char(br.r_REGDATE, 'yy-mm-dd')) "writeDate", br.rno "bno"
		from (select distinct follow
		      from follow fo
		      where fo.id=#{str}) fo, member m, brd_review br
		where fo.follow = m.id and br.r_writer = fo.follow
		
		union
		
		select distinct '같이가요' "boardType", bt.t_TITLE "title", m.nickName "nickName", to_date(to_char(bt.t_REGDATE, 'yy-mm-dd')) "writeDate", bt.tno "bno"
		from (select distinct follow
		      from follow fo
		      where fo.id=#{str}) fo, member m, brd_together bt
		where fo.follow = m.id and bt.t_writer = fo.follow
		order by "writeDate" desc
	</select>
		
	
	<!-- 팔로워가 작성한 3개 게시판의 모든 글들의 갯수를 카운트한다. -->
	<select id="f_WriteTotalCount" resultType="int">
		select distinct count(*)
		from (
			select distinct '축제' "boardType", bf.F_TITLE "title", m.nickName "nickName", to_date(to_char(bf.F_REGDATE, 'yy-mm-dd')) "writeDate", bf.fno "bno"
			from (select distinct follow
			      from follow fo
			      where fo.id=#{str}) fo, member m, brd_festival bf
			where fo.follow = m.id and bf.f_writer = fo.follow
			
			union
			
			select distinct '후기' "boardType", br.R_TITLE "title", m.nickName "nickName", to_date(to_char(br.r_REGDATE, 'yy-mm-dd')) "writeDate", br.rno "bno"
			from (select distinct follow
			      from follow fo
			      where fo.id=#{str}) fo, member m, brd_review br
			where fo.follow = m.id and br.r_writer = fo.follow
			
			union
			
			select distinct '같이가요' "boardType", bt.t_TITLE "title", m.nickName "nickName", to_date(to_char(bt.t_REGDATE, 'yy-mm-dd')) "writeDate", bt.tno "bno"
			from (select distinct follow
			      from follow fo
			      where fo.id=#{str}) fo, member m, brd_together bt
			where fo.follow = m.id and bt.t_writer = fo.follow
			order by "writeDate" desc
		)
	</select>
	
	
<!-- ////////////////////////////////////////////////////////////////////////////////////////// -->
	
	
	<!-- 팔로워가 작성한 같이가요 게시판의 모든 글들을 출력한다. -->
	
	<select id="followWantGo" resultType="followBoard">
		select distinct '가고싶어요' "boardtype", fo.follow "nickName", bf.f_title "title", to_date(to_char(v.chkdate, 'yy-mm-dd')) "writeDate" 
		from follow fo, member m, vote v, brd_festival bf
		where fo.id = #{str}
		and fo.follow = m.id
		and fo.follow = v.id
		and v.unq_id = bf.unq_id
		and v.f_seperate = 1
	</select>
	
	
	<!-- 팔로워가 작성한 같이가요 게시판의 모든 글들의 갯수를 카운트한다. -->
	<select id="f_WantGoTotalCount" resultType="int">
		select distinct count(*)
		from(
			select distinct '가고싶어요' "boardtype", fo.follow "nickName", bf.f_title "title", to_date(to_char(v.chkdate, 'yy-mm-dd')) "writeDate" 
			from follow fo, member m, vote v, brd_festival bf
			where fo.id = #{str}
			and fo.follow = m.id
			and fo.follow = v.id
			and v.unq_id = bf.unq_id
			and v.f_seperate = 1
		)
	</select>
	
	
<!-- ////////////////////////////////////////////////////////////////////////////////////////// -->
	
	
	<update id="deleteFollow">
	delete
	from follow
	where id = #{myId}
   		  and follow = (select distinct id
     					  from member 
   						  where nickname = #{nickName})
	</update>
</mapper>
    
    
    
    
    
    
    
    
    
    
    